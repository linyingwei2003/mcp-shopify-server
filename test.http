### Test 1: Connect to MCP Server via SSE
GET http://localhost:3000/mcp
Accept: text/event-stream

### Test 2: Initialize MCP Connection
POST http://localhost:3000/mcp
Content-Type: application/json

{
    "jsonrpc": "2.0",
    "id": 1,
    "method": "initialize",
    "params": {
        "protocolVersion": "2024-11-05",
        "capabilities": {},
        "clientInfo": {
            "name": "test-client",
            "version": "1.0.0"
        }
    }
}

### Test 2.5: Send Initialization Notification (no response expected)
POST http://localhost:3000/mcp
Content-Type: application/json

{
    "jsonrpc": "2.0",
    "method": "notifications/initialized"
}

### Test 3: List Available Tools
POST http://localhost:3000/mcp
Content-Type: application/json

{
    "jsonrpc": "2.0",
    "id": 2,
    "method": "tools/list"
}

### Test 4: Execute Shopify Query - Get Shop Info
POST http://localhost:3000/mcp
Content-Type: application/json

{
    "jsonrpc": "2.0",
    "id": 3,
    "method": "tools/call",
    "params": {
        "name": "run_shopify_admin_query",
        "arguments": {
            "query": "query { shop { name email domain } }"
        }
    }
}

### Test 5: Execute Shopify Query - Get Recent Orders
POST http://localhost:3000/mcp
Content-Type: application/json

{
    "jsonrpc": "2.0",
    "id": 4,
    "method": "tools/call",
    "params": {
        "name": "run_shopify_admin_query",
        "arguments": {
            "query": "query {\n  orders(first: 1, sortKey: PROCESSED_AT, reverse: true) {\n    nodes {\n      id\n      processedAt\n      totalPriceSet {\n        shopMoney {\n          amount\n          currencyCode\n        }\n      }\n    }\n  }\n}"
        }
    }
}

### Test 6: Get Shopify GraphQL Schema
POST http://localhost:3000/mcp
Content-Type: application/json

{
    "jsonrpc": "2.0",
    "id": 5,
    "method": "tools/call",
    "params": {
        "name": "get_shopify_schema",
        "arguments": {}
    }
}

### Test 7: Test GraphQL Error Handling (Invalid Query)
POST http://localhost:3000/mcp
Content-Type: application/json

{
    "jsonrpc": "2.0",
    "id": 6,
    "method": "tools/call",
    "params": {
        "name": "run_shopify_admin_query",
        "arguments": {
            "query": "query { invalidField { nonExistentField } }"
        }
    }
}

### Test 8: Test Invalid SortKey Error (Demonstrates Error Handling)
POST http://localhost:3000/mcp
Content-Type: application/json

{
    "jsonrpc": "2.0",
    "id": 7,
    "method": "tools/call",
    "params": {
        "name": "run_shopify_admin_query",
        "arguments": {
            "query": "query { products(first: 5, sortKey: PRICE) { edges { node { id title } } } }"
        }
    }
}